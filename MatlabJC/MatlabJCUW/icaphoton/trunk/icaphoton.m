function icaphoton(x)
%  Summary:
%  Function iacaphoton, without any inputs, is printed at the command line to 
%  start the user interface, icaphoton.  This is the first of a series of three
%  interfaces, which together will select and analyze a group of epochs in a 
%  selected file.   
%  To set default file path, open the m-file, go to line 38 (variable s1) & 
%  change path
%  If nothing seems to happen when you push comment or load, look at
%  command line for errors.
%  To look at previous analysis can go directly to playtime using syntax:
%  >>playtime('init','matfilename',1)
%  Where matfilename is the file that was saved at the end of playtime
%
%  'help photons' at the command line will give a list of all functions in 
%  this directory and its sub-directories.
%
%  Version 2, include a check for whether CellInfo structure exists for this file
%  yet or not.   When the checkbox for CellInfo is checked, a field appears where the
%  user can enter the file name.  Loads the structure file, and now gets comments from it.
%  when the comment button is pressed, instead of the original file comments field.
%

% Summary of persistent variables:
%  fp is the name of the file (including path),  fileptr is the variable returned
%  by ITCInitializeAnalysis, and used in subsequent commands to pull data from
%  the chosen file.  
% Summary of variable sent to Epochs:
%  fp 			file name, either original or structure, epochs will know which one
%				based on the value v
%  plotpref  	how the user has chosen to view file plots, more information is 
%				available under help for epochs
%  v			v = 0, original file, v = 1, structure file, get original filename from
%				structure
%  Created January, 2001,   MKMK
%  Version 2 released August, 2001, MKMK
%  Oct 2004 MKMK Changed ITCFinishAnalysis to use evalin in order to get around
%  wierd bug in Matlab version 7
%  Nov 2004 MKMK Changed so the checkbox for selecting which epochs to
%  search through actually works, also made another change with
%  ITCFinishAnalysis (using evalin), so doesn't crash when you don't check a comment.
%  May 2005 MKMK Turns out it wasn't matlab; Fred fixed the bug in
%  ITCFinishAnalysis, so we don't have to use evalin anymore.

persistent fp fileptr
if nargin<1
    x = 'init';	
end

switch x
    
    %  Setup the screen	
    case 'init'
        load icaphoton
        s1='~/Data/';%'/Users/bwark/data/rieke/';
        [s1path,s1name]=fileparts(pwd);
        plotpref = 1;
        fig1 = figure('CloseRequestFcn','icaphoton finalclose',...
            'MenuBar','none', ...
            'Position',[100 100 550 450], ...
            'Tag','Fig1');
        %  Title
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'BackgroundColor',[0.8 0.8 0.8], ...
            'FontSize',24, ...
            'Position',[220 380 250 30], ...
            'String','ICAPHOTON', ...
            'Style','text', ...
            'Tag','title');
        %  Create buttons, boxes, and labels
        %  First box is an editable text, in which user inputs file to analyze
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'Position',[26.625 370 125.25 19.5], ...
            'String',[s1name 'c1'], ...
            'Style','edit', ...
            'Tag','file', ...
            'Value',1);
        %  This is the label for the previous editable text box
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ... 
            'BackgroundColor',[0.8 0.8 0.8], ...  
            'ListboxTop',0, ...
            'Position',[26.75 400 125 25], ...
            'String','Type in the name of a file to analyze', ...
            'Style','text', ...
            'Tag','StaticText1');
        %  This is the button to press to see the file comment
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'Callback','icaphoton comment', ...
            'ListboxTop',0, ...
            'Position',[26.75 330 125 25], ...
            'String','Push to view comments', ...
            'Tag','comment load');
        %  This is to check to see if a structure already exists for this file, if there
        %  is we will add to the structure, rather than creating a new one
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'Callback','icaphoton cellfile', ...
            'ListboxTop',0, ...
            'Position',[26.75 290 150 25], ...
            'String','CellInfo already exists', ...
            'Style','checkbox', ...
            'Tag','previous analysis',...
            'Visible','on');
        %   The next two controls become visible if we are using a previously analyzed file
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'BackgroundColor',[0.8 0.8 0.8], ...  
            'Position',[26.75 250 126 25], ...
            'String','Name of file containing structure', ...
            'Style','text', ...
            'Tag','structname',...
            'Visible','off');	
        h1 = uicontrol('Parent',fig1, ...
            'Position',[26.75 230 126 25], ...
            'String','', ...
            'Style','edit', ...
            'Tag','structname',...
            'Userdata','name', ...
            'Visible','off');	
        %  This is a checkbox so the user can indicate the desire to enter in epoch 
        %  numbers to search from
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'ListboxTop',0, ...
            'Position',[26.75 180 150 20], ...
            'String','Choose epochs to search', ...
            'Style','checkbox', ...
            'Tag','epoch search');
        %  This is the textbox to enter a new path name
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'Callback','icaphoton path', ...
            'Position',[26.625 10 200 19.5], ...
            'String',s1, ...
            'Style','edit', ...
            'Tag','newpath', ...
            'Value',1);
        %  This is the label for the previous editable text box
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'BackgroundColor',[0.8 0.8 0.8], ...  
            'Position',[26.75 40 150 25], ...
            'String','Type in the name of the path, if different then shown', ...
            'Style','text', ...
            'Tag','StaticText2');
        %  Label for graphing options
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'BackgroundColor',[0.8 0.8 0.8], ...  
            'Position',[26.75 130 150 25], ...
            'String','Check your graphing options', ...
            'Style','text', ...
            'Tag','StaticText2');
        %  Checkboxes for graphing options
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'ListboxTop',0, ...
            'Position',[26.75 110 150 25], ...
            'String','Show all segments', ...
            'Style','checkbox', ...
            'Tag','segments');	
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'ListboxTop',0, ...
            'Position',[26.75 80 150 25], ...
            'String','Show stimulus plot', ...
            'Style','checkbox', ...
            'Tag','stim');	
        %  This is the box which will display the comments from the file 
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'ListboxTop',0, ...
            'Position',[200 60 300 280], ...
            'String','', ...
            'Style','text', ...
            'Tag','comment window');
        %  This is the button to press to load the file, and continue on to choose the 
        %  type of epoch user will be analyzing
        h1 = uicontrol('Parent',fig1, ...
            'Units','points', ...
            'Callback','icaphoton load', ...
            'ListboxTop',0, ...
            'Position',[300 15.75 125 24.75], ...
            'String','Push to load file', ...
            'Tag','load file');
        plotstim = findobj(gcf,'tag','stim');
        plotseg = findobj(gcf,'tag','segments');
        if ~isempty(plotpref)
            if plotpref==2 
                set(plotseg,'value',1);
            elseif plotpref==3 
                set(plotstim,'value',1);
            elseif plotpref==4
                set(plotstim,'value',1);
                set(plotseg,'value',1);
            end
        end
        
        %  ****************************************************************************
        %  These are the various sub-commands used in this GUI during various callbacks	
        %  ****************************************************************************
        %	Cellfile makes visible the buttons to get the filename that contains the structure
    case 'cellfile'
        structbut = findobj(gcf,'tag','structname');
        set(structbut,'visible','on');
        %  Comment looks up the file name to retrieve the comments for, checks to see 
        %  if user wants to look at a comment from a previous analysis
    case 'comment' 
        f1 = findobj(gcf,'tag','file');
        c1 = findobj(gcf,'tag','comment window');
        p1 = findobj(gcf,'tag','previous analysis');
        v = get(p1,'value');
        if v == 0
            newpa = findobj(gcf,'tag','newpath');
            s1 = get(newpa,'String');
            s2 = get(f1,'String');
            fp = strcat(s1,s2);
            [fileptr, ecode] = ITCInitializeAnalysis(2e6, fp);
            [filecomment, ecode2] = ITCGetFileComment(fileptr);
            if ecode2 == 0
                set (c1,'String',filecomment)
                ITCFinishAnalysis(fileptr);
            else 
                clc
                disp('Comment not found')
                icaphoton error
            end
        elseif v == 1
            structname = findobj(gcf,'userdata','name');
            structname = get(structname,'string')
            load(structname)
            set (c1,'String',CellInfo.Comment);
        end
        %  Once the user has decided that the correct file is on line, time to move on	
    case 'load'
        %  In case the user did not check the comment file first, we still want to load 
        %  correct file, so must check file name.  If a name of a file containing a 
        %  structure was given, we load the structure.
        p1 = findobj(gcf,'tag','previous analysis');
        v = get(p1,'value');
        if v == 0		
            f1 = findobj(gcf,'tag','file');
            newpa = findobj(gcf,'tag','newpath');
            s1 = get(newpa,'String');
            s2 = get(f1,'String');
            fp = strcat(s1,s2);
            [fileptr, ecode] = ITCInitializeAnalysis(2e6, fp);
        elseif v == 1
            structname = findobj(gcf,'userdata','name');
            structname = get(structname,'string');
            fp = structname;
            ecode = 0;
        end
        
        %  Now let's check the user preference for plots
        pp1 = findobj(gcf,'tag','segments');
        pp2 = findobj(gcf,'tag','stim');
        pv1 = get(pp1,'value');
        pv2 = get(pp2,'value');
        %  Options are 
        %  1 Nothing specified
        %  2 Other segment shown, stim not shown
        %  3 Other segment not shown, stim shown
        %  4 Both segment and stim shown
        if pv1 == 0 & pv2 == 0 
            plotpre = 1;
        elseif pv1 == 1 & pv2 == 0 
            plotpre = 2;
        elseif pv1 == 0 & pv2 == 1 
            plotpre = 3;
        elseif pv1 == 1 & pv2 == 1 
            plotpre = 4;
        end
        %   
        %   If the user wants to search through specific epochs in file, searnumb is set
        %   to one, and epochs is entered through a 'back door'.
        searnum = findobj(gcf,'tag','epoch search');
        searnumb = get(searnum,'value');
        icaphoton close
        plotpre;
        if searnumb == 0
            epochs('init',fp,plotpre,v);
        elseif searnumb == 1 
            epochs('listnum',fp,plotpre,v,searnumb);
        end
    case 'path'
        newpa = findobj(gcf,'tag','newpath');
        clear s1
        s1 = get(newpa,'String');
    case 'error'
        c1 = findobj(gcf,'tag','comment window');
        set (c1,'String','Error, See Command Window');
        return
    case 'close'
        %disp('Leaving Icaphoton');			
        ITCFinishAnalysis(fileptr);
        %disp('finished');
        delete(gcf)
    case 'finalclose'
        if isempty(fileptr)
            delete(gcf)
            clear
        else
            ITCFinishAnalysis(fileptr);
            %disp('finished');
            delete(gcf)
            clear all
        end
        if nargout > 0, fig = fig1; 
        end
end





